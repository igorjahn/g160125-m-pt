# Тема: Создание модулей

# Задание: Создание и использование собственного модуля
#
# Часть 1: Создание модуля
#
# 1. Создайте файл с именем `math_operations.py`.
# 2. В этом файле определите три функции:
#     - `multiply(a, b)`: возвращает произведение двух чисел `a` и `b`.
#     - `subtract(a, b)`: возвращает разность между двумя числами `a` и `b`.
#     - `divide(a, b)`: возвращает результат деления числа `a` на `b`.
# 3. Включите конструкцию `if __name__ == "__main__"`, которая будет выполнять принт сообщения,
# если модуль запущен напрямую: “Модуль запущен напрямую”.
#
# Часть 2: Использование модуля
#
# 1. Создайте другой файл с именем `main.py`.
# 2. Импортируйте в этот файл созданный вами модуль `math_operations`.
# 3. Используйте функции из модуля для выполнения операций умножения, вычитания и деления,
# и выведите результаты на экран.
# 4. Затем запустите напрямую модуль `math_operations.py`
# и проверьте, что отработало сообщение “Модуль запущен напрямую”.


# Тема: модули random, math
# Основные функции этих модулей есть в файле examples.

# Задание 1: Округление и вычисление квадратного корня
# Напишите функцию, которая принимает на вход два числа:
# одно для округления вверх, другое для округления вниз.
# Затем программа должна вычислить квадратный корень
# каждого округленного числа и вывести результаты.
import math
import random
def nums(x,y):
    x_up = math.ceil(x)
    x_up_sqrt = math.sqrt(x_up)
    y_dwn = math.floor(y)
    y_dwn_sqrt = math.sqrt(y_dwn)
    print(f'x_up = {x_up}, x_up_sqrt = {x_up_sqrt}, y_dwn = {y_dwn}, y_dwn_sqrt = {y_dwn_sqrt}')
nums(24.27653473263, 121.27836582735873648276458)



# Задание 2: Факториал и возведение в степень
# Напишите функцию, которая вычисляет факториал числа,
# а затем возводит результат в степень,
# равную количеству цифр в этом факториале. Выведите результат.
def factorials (x):
    x_fact = math.factorial(x)
    x_fact_pow = math.pow(x_fact,len(str(x_fact)))
    print(f'x_fact = {x_fact}, pow_factor = {len(str(x_fact))}, x_fact_pow = {x_fact_pow}')
factorials(5)

# Задание 3: Перемешивание списка и выбор элемента
# Напишите функцию, которая создает список из 10 случайных чисел в диапазоне от 1 до 100.
# Перемешайте список и выберите один случайный элемент. Выведите результат.
def gen_nums():
    gen_nums_list = []
    for num in range (1, 10):
        gen_nums_list.append(random.randint(1,100))
#        print(gen_nums_list)
    return gen_nums_list
# gen_nums()
def shuffle(nums):
    random.shuffle(nums)
    print(nums)
shuffle(gen_nums())
# Задание 4: Отбрасывание дробной части и факториал
# Напишите программу, которая принимает дробное число, отбрасывает его дробную часть,
# а затем вычисляет факториал полученного целого числа. Выведите результат.

def drobnum(x):
    y = math.floor(x)
    z = math.factorial(y)
    print(z)
drobnum(12.76)

# Задание 5: Генерация и округление случайного числа
# Напишите программу, которая генерирует случайное дробное число в диапазоне от 1.5 до 10.5,
# округляет его до ближайшего целого в меньшую и большую сторону, а затем выводит результаты.

def flo_ran():
    x = random.uniform(1.5, 10.5)
    x_down = math.floor(x)
    x_up = math.ceil(x)
    print(f'x = {x}, x_down = {x_down}, x_up = {x_up}')
    return x, x_down,x_up
result = flo_ran()

# Тема: Сторонние модули

# Задание: Установка Django в виртуальную среду
#
# 1. Установка виртуального окружения
# Создайте отдельную папку для выполнения задания. Перейдите в эту папку в терминале (команда cd <название папки>)
# Для создания виртуальной среды используйте модуль `venv`, который встроен в Python 3.
# Находясь в папке задания в терминале введите python -m venv myenv
#
# 2. Активация виртуальной среды
# После создания виртуального окружения, его нужно активировать.
# На Windows: myenv\\Scripts\\activate
# На MacOS и Linux: source myenv/bin/activate
#
# 3. Установка Django
# Когда виртуальная среда активирована, можно установить Django с помощью `pip`.
# pip install django
#
# 4. Проверка установки Django
# После установки Django проверьте его версию, чтобы убедиться, что установка прошла успешно.
# django-admin --version
#
# 5. Создайте файл requirements.txt, где будет указан django.
#
# После завершения работы в виртуальной среде, её можно деактивировать: deactivate